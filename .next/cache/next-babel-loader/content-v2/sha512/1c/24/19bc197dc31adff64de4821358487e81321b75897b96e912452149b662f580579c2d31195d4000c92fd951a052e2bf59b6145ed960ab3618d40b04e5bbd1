{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Web-Development\\\\nextjs-indepth\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport React, { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/d/d9/Chennai_-_bird%27s-eye_view.jpg\",\n    alt: \"meetup\",\n    title: \"A first meetup\",\n    address: \"Chennai 5,600060\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n}; //this function is necessary if we use dynamic url with getStaticProps function\n\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/Web-Development/nextjs-indepth/pages/[meetupId]/index.js"],"names":["React","Fragment","MeetupDetail","MeetupDetails"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,qFADR;AAEE,IAAA,GAAG,EAAC,QAFN;AAGE,IAAA,KAAK,EAAC,gBAHR;AAIE,IAAA,OAAO,EAAC,kBAJV;AAKE,IAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAVD,C,CAYA;;;KAZMA,a;;AAmDN,eAAeA,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport React, { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetails = () => {\r\n  return (\r\n    <MeetupDetail\r\n      image=\"https://upload.wikimedia.org/wikipedia/commons/d/d9/Chennai_-_bird%27s-eye_view.jpg\"\r\n      alt=\"meetup\"\r\n      title=\"A first meetup\"\r\n      address=\"Chennai 5,600060\"\r\n      description=\"This is a first meetup\"\r\n    />\r\n  );\r\n};\r\n\r\n//this function is necessary if we use dynamic url with getStaticProps function\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin-shashank:admin123@cluster0.8sqig.mongodb.net/meetupDB\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const meetups = meetupCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin-shashank:admin123@cluster0.8sqig.mongodb.net/meetupDB\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const meetupData = await meetupCollection.findOne({ _id: meetupId });\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        image: meetupData.image,\r\n        id: meetupId,\r\n        alt: meetupData.title,\r\n        title: meetupData.title,\r\n        address: meetupData.address,\r\n        description: meetupData.description,\r\n      },\r\n    },\r\n  };\r\n}\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}