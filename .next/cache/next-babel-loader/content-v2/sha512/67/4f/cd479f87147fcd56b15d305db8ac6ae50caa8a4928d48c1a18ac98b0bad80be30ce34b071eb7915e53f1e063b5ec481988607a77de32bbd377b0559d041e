{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Web-Development\\\\nextjs-indepth\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport React, { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    alt: props.meetupData.title,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n}; //this function is necessary if we use dynamic url with getStaticProps function\n\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/Web-Development/nextjs-indepth/pages/[meetupId]/index.js"],"names":["React","Fragment","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,GAAG,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFxB;AAGE,IAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBE,KAH1B;AAIE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAJ5B;AAKE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AALhC;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAVD,C,CAYA;;;KAZMN,a;;AAgDN,eAAeA,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport React, { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      alt={props.meetupData.title}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n};\r\n\r\n//this function is necessary if we use dynamic url with getStaticProps function\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin-shashank:admin123@cluster0.8sqig.mongodb.net/meetupDB\",\r\n    {\r\n      useUnifiedTopology: true,\r\n    }\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin-shashank:admin123@cluster0.8sqig.mongodb.net/meetupDB\",\r\n    { useUnifiedTopology: true }\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const meetupData = await meetupCollection.findOne({ _id: meetupId });\r\n  return {\r\n    props: {\r\n      meetupData: meetupData,\r\n    },\r\n  };\r\n}\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}