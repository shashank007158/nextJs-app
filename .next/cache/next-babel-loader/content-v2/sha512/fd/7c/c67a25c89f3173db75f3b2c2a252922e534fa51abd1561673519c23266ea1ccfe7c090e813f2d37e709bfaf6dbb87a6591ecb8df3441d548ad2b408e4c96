{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Web-Development\\\\nextjs-indepth\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport React, { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/d/d9/Chennai_-_bird%27s-eye_view.jpg\",\n    alt: \"meetup\",\n    title: \"A first meetup\",\n    address: \"Chennai 5,600060\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}; //this function is necessary if we use dynamic url with getStaticProps function\n\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://admin-shashank:admin123@cluster0.8sqig.mongodb.net/meetupDB\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://admin-shashank:admin123@cluster0.8sqig.mongodb.net/meetupDB\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetupData = await meetupCollection.findOne({\n    _id: meetupId\n  });\n  return {\n    props: {\n      meetupData: {\n        image: meetupData.image,\n        id: meetupId,\n        alt: meetupData.title,\n        title: meetupData.title,\n        address: meetupData.address,\n        description: meetupData.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/Web-Development/nextjs-indepth/pages/[meetupId]/index.js"],"names":["MongoClient","React","Fragment","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","meetupData","findOne","props","image","id","alt","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,qFADR;AAEE,IAAA,GAAG,EAAC,QAFN;AAGE,IAAA,KAAK,EAAC,gBAHR;AAIE,IAAA,OAAO,EAAC,kBAJV;AAKE,IAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD,C,CAYA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,2EADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAtB;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMd,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,2EADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMc,UAAU,GAAG,MAAMf,gBAAgB,CAACgB,OAAjB,CAAyB;AAAEZ,IAAAA,GAAG,EAAEO;AAAP,GAAzB,CAAzB;AACA,SAAO;AACLM,IAAAA,KAAK,EAAE;AACLF,MAAAA,UAAU,EAAE;AACVG,QAAAA,KAAK,EAAEH,UAAU,CAACG,KADR;AAEVC,QAAAA,EAAE,EAAER,QAFM;AAGVS,QAAAA,GAAG,EAAEL,UAAU,CAACM,KAHN;AAIVA,QAAAA,KAAK,EAAEN,UAAU,CAACM,KAJR;AAKVC,QAAAA,OAAO,EAAEP,UAAU,CAACO,OALV;AAMVC,QAAAA,WAAW,EAAER,UAAU,CAACQ;AANd;AADP;AADF,GAAP;AAYD;AACD,eAAe5B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport React, { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetails = () => {\r\n  return (\r\n    <MeetupDetail\r\n      image=\"https://upload.wikimedia.org/wikipedia/commons/d/d9/Chennai_-_bird%27s-eye_view.jpg\"\r\n      alt=\"meetup\"\r\n      title=\"A first meetup\"\r\n      address=\"Chennai 5,600060\"\r\n      description=\"This is a first meetup\"\r\n    />\r\n  );\r\n};\r\n\r\n//this function is necessary if we use dynamic url with getStaticProps function\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin-shashank:admin123@cluster0.8sqig.mongodb.net/meetupDB\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin-shashank:admin123@cluster0.8sqig.mongodb.net/meetupDB\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const meetupData = await meetupCollection.findOne({ _id: meetupId });\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        image: meetupData.image,\r\n        id: meetupId,\r\n        alt: meetupData.title,\r\n        title: meetupData.title,\r\n        address: meetupData.address,\r\n        description: meetupData.description,\r\n      },\r\n    },\r\n  };\r\n}\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}